procedure main()

    l := trim(read())
    # Part 1
    write(process(l))

    # Part 2
    min := *l
    every c := !&lcase do {
        min >:= process(l,c||swapcase(c))
    }
    write(min)

end
procedure process(l,c)
    i := 1
    until i = *l do {
        if \c & any(c,l[i]) then {
            l[i] := ""
            i -:= 1
        }
        else if l[i+1] == swapcase(l[i]) then {
            l[i+:2] := ""
            i -:= 1
        }
        else i+:=1
    }

    return *l
end
procedure swapcase(c)
    return map(c,&lcase||&ucase,&ucase||&lcase)
end