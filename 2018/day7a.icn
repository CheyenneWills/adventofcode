
record step(id,psteps,nsteps)
global steps

procedure main()
    steps := table()

    while line := splitline(trim(read())) do {
        id := line[2]
        nstep := line[8]
        /steps[id] := step(id,set(),set())
        /steps[nstep] := step(nstep,set(),set())
        insert(steps[id].nsteps,nstep)
        insert(steps[nstep].psteps,id)
    }
    queue := set()
    every id := key(steps) do {
        if *steps[id].psteps = 0 then insert(queue,id)
    }

    processed := ""
    pset := set()

    while s := nextstep(queue,pset) do {
        processed ||:= s
        insert(pset,s)
        delete(queue,s)
        queue ++:= steps[s].nsteps
    }
    write(processed)
end

procedure nextstep(Q,p)
    write("queue:",dmp(Q)," Processed:",dmp(p))

    every s := key(steps) do {
        write(steps[s].id,": ",dmp(steps[s].psteps)," - ",dmp(steps[s].nsteps))
    }
    write("--")


    every s := !sort(Q) do {
        if *(steps[s].psteps -- p) = 0 then return s
    }
end
procedure dmp(s)
    o := ""
    every o ||:= !sort(s)
    return o
end
procedure splitline(l)
    r := []
    l ? while not pos(0) do {
            tab(many(' '))
            put(r,tab(upto(' ')|0))
    }
    return r
end