link ximage
global grid, visited
procedure main(args)

    pinput := "uugsqrei"
   # pinput := "flqrgnkx"
    
    grid := repl(".",128*128)
    n := 1
    every i := 0 to 127 do {
        keystr := pinput || "-" || i
        hash := knothash(keystr)
        every x := !hash do {
            m := 16r80
            every 1 to 8 do {
                if iand(x,m) ~= 0 then {
                    grid[n] := "#"
                }
                m := ishift(m,-1)
                n +:= 1
            }
        }
    }
    c := 0
    
    every find("#",grid) do c +:= 1
    write("Part1=",c)

    visited := set([])
    groups := []
    every put(groups, mkgroup(1 to *grid))
    write("part2=",*groups)
end
procedure mkgroup(p)
    
    if grid[p] ~== "#" then fail
    if member(visited,p) then fail

    insert(visited,p)
    grp := set([])
    insert(grp,p)
    every n := ![-128,1,128,-1] & 
        not (n+p <= 0 |
             n+p > *grid |
            (n = -1 & p % 128 = 1) |
            (n = 1 & p % 128 = 0)) do {
        grp ++:= mkgroup(p+n)
    }
    return grp
end


# From Day 10
procedure knothash(s)
L := []
every put(L,0 to 255)

lengths := []
every put(lengths,ord(!s))
lengths |||:= [17,31,73,47,23]

cur := 0
skip := 0
every 1 to 64 do {
    every l := !lengths do {
        every x := 1 to integer(l/2) do 
            L[((cur+x-1) % *L)+1] :=: L[ ((cur+l-x) % *L)+1]
        cur +:= l + skip
        skip +:= 1
    }
}

densehash := list(16)
every i := 1 to *L do {

        if (i-1) % 16 = 0 then 
            densehash[ integer((i-1)/16) + 1] := L[i]
        else
            densehash[integer((i-1)/16) + 1] := ixor(densehash[integer((i-1)/16)+1],L[i])
        
}

return densehash

end
