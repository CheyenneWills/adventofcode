
record inst(op,p1,p2)

procedure main(args)
	inf := open(args[1],"r")
	mem := []
	
	ws := ' \t'
	while line := trim(!inf) do {
		line ? {
			i := inst("","","")
			i.op := tab(upto(ws))
			tab(many(ws))

			case i.op of {
				# 1 param
				"snd" |
				"rcv":
					i.p1 := tab(0)
				# 2 param
				"set" |
				"add" |
				"mul" | 
				"mod" |
				"jgz": {
					i.p1 := tab(upto(ws))
					tab(many(ws))
					i.p2 := tab(0)
				}
			}
			i.p1 := integer(i.p1)
			i.p2 := integer(i.p2)
			put(mem,i)
		}
	}
	close(inf)

 
	regs := table(0)
	curfreq := 0
	
	IP := 1

	first := &null
	repeat {
		if IP > *mem then break
		i := mem[IP]
		IP +:= 1
		
		case i.op of {
			"snd": curfreq := integer(i.p1) | integer(regs[i.p1])
			"set": regs[i.p1] := integer(i.p2) | integer(regs[i.p2])
			"add": regs[i.p1] +:= integer(i.p2) | integer(regs[i.p2])
			"mul": regs[i.p1] *:= integer(i.p2) | integer(regs[i.p2])
			"mod": regs[i.p1] %:= integer(i.p2) | integer(regs[i.p2])
			"rcv": {
				if regs[i.p1] > 0 then {
					regs[i.p1] := curfreq
					break
				}
			}
			"jgz": {
				if (integer(i.p1) | integer(regs[i.p1])) > 0 then 
					IP := (IP-1) +  (integer(i.p2) | integer(regs[i.p2])) 
			}
				
 			default: break
		}
	}
	write("FREQ=",curfreq)
end