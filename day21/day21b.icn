record person(name,hitpoints,damage,armor)
record item(name,cost,damage,armor)

global shop_weapons, shop_armor, shop_rings


procedure main()
	setup()
	boss := parse_input()
	best_price := &null
	best_inventory := &null
	every inventory := gen_inventory() do {
		player := person("Player",100)
		player.damage := inventory.damage
		player.armor := inventory.armor

		winner := battle(player,boss)
		if winner.name == "Boss" then {
			/best_price := inventory.cost
			/best_inventory := inventory
			if best_price < inventory.cost then {
				best_price := inventory.cost
				best_inventory := inventory
			}
		}

	}
	write("best price ",best_price)
end
procedure battle(a,d)
	attacker := copy(a)
	defender := copy(d)
	repeat {

		defender.hitpoints -:= (1 < ( attacker.damage - defender.armor ) ) | 1

		if defender.hitpoints <= 0 then {
			return attacker
		}
		defender :=: attacker
	}
end
procedure gen_inventory()
	every weapon := gen_weapons() do {
		every armor := gen_armor() do {
			every ring := gen_rings() do {
				inventory := item(&null,0,0,0)
				inventory.name := [weapon,armor,ring]
				inventory.cost +:= (\weapon).cost
				inventory.damage +:= (\weapon).damage
				inventory.armor +:= (\weapon).armor

				inventory.cost +:= (\armor).cost
				inventory.damage +:= (\armor).damage
				inventory.armor +:= (\armor).armor

				every r := !(\ring) do {
					inventory.cost +:= r.cost
					inventory.damage +:= r.damage
					inventory.armor +:= r.armor
				}
				suspend inventory
			}
		}
	}
end

procedure gen_weapons()
	# must have at least one
	suspend !shop_weapons
end
procedure gen_armor()
	# zero or one
	suspend &null
	suspend !shop_armor
end
procedure gen_rings()
	# zero, 1 or two
	suspend &null
	suspend [!shop_rings]
	suspend lcomb(shop_rings,2)

end
procedure lcomb(L,i)
	local j

	if i < 1 then fail
	suspend if i = 1 then [!L]
		else [L[j := 1 to *L - i + 1]] ||| lcomb(L[j+1:0],i-1)
end


procedure parse_input()
	while line := trim(read()) do {
		line ? {
			hitpoints := 3(="Hit Points:",tab(upto(&digits)),integer(tab(many(&digits))))
			damage := 3(="Damage:",tab(upto(&digits)),integer(tab(many(&digits))))
			armor := 3(="Armor:",tab(upto(&digits)),integer(tab(many(&digits))))
		}
	}
	return person("Boss",hitpoints,damage,armor)
end
procedure setup()

	#                       Cost  Damage  Armor
	shop_weapons := [
		item("Dagger",      8,      4,       0),
		item("Shortsword",  10,     5,       0),
		item("Warhammer",   25,     6,       0),
		item("Longsword",   40,     7,       0),
		item("Greataxe",    74,     8,       0)
	]

	shop_armor := [
		item("Leather",     13,     0,       1),
		item("Chainmail",   31,     0,       2),
		item("Splintmail",  53,     0,       3),
		item("Bandedmail",  75,     0,       4),
		item("Platemail",  102,     0,       5)
	]

	shop_rings := [
		item("Damage +1",   25,     1,       0),
		item("Damage +2",   50,     2,       0),
		item("Damage +3",  100,     3,       0),
		item("Defense +1",  20,     0,       1),
		item("Defense +2",  40,     0,       2),
		item("Defense +3",  80,     0,       3)
	]

end