
link ximage
global locations    # List of just the endpoints
global distances

record path(ab,dist)

procedure main()
    
    distances := table()
    locations := set()
    
    parse_input()

    plist := &null
    locations := sort(locations)
    every p := permute(locations) do {
        
        curr := path(p,0)
        every i := 1 to *p-1 do {
            a := p[i]
            b := p[i+1]
            if /distances[a][b] then break next
            curr.dist +:= distances[a][b]
        }
        /plist := curr
        if plist.dist < curr.dist then plist := curr
    }
     
    write("distance:",plist.dist)

end



procedure parse_input()
    # Parse input
    while line := trim(read()) do {
        line ? {
            a := tab(upto(' \t'))
            tab(many(' \t'))
            ="to"
            tab(many(' \t'))
            b := tab(upto(' \t='))
            tab(many(' \t'))
            ="="
            tab(many(' \t'))
            d := integer(tab(upto(' \t') | 0))
        }

        insert(locations,a)
        insert(locations,b)
        /distances[a] := table()
        /distances[b] := table()    
        distances[a][b] := d
        distances[b][a] := d
    }
    return best
end

procedure permute(L)
    if *L = 0 then return []
    suspend [L[i := 1 to *L]] ||| permute(L[1:i] ||| L[i+1:0])
end